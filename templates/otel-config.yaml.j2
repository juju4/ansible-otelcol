{{ ansible_managed | comment }}

receivers:
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/journaldreceiver
  journald:
    directory: /var/log/journal
{% if otelcol_journald_extras %}
    {{ otelcol_journald_extras | to_nice_yaml(indent=0,sort_keys=False) | indent(4, False) }}
{% endif %}
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/tree/main/receiver/filelogreceiver
  filelog/std:
    include:
      {{ otelcol_filelog_include | to_nice_yaml(indent=0,sort_keys=False) | indent(6, False) }}
    # start_at: beginning
    include_file_path: true
  hostmetrics:
    root_path: /
    collection_interval: 30s
    scrapers:
      cpu:
      disk:
      filesystem:
      load:
      memory:
      network:
      paging:
      processes:
      # process: # a bug in the process scraper causes the collector to throw errors so disabling it for now
{% if otelcol_config_receivers %}
  {{ otelcol_config_receivers | to_nice_yaml(indent=2,sort_keys=False) | indent(2, False) }}
{% endif %}

processors:
{% if otelcol_sampling_enable | bool %}
  # https://opentelemetry.io/docs/concepts/sampling/
  # https://opentelemetry.io/blog/2022/tail-sampling/
  tail_sampling:
    decision_wait: 10s
    num_traces: 100
    expected_new_traces_per_sec: 10
    policies:
      [
        {
          name: randomized-policy,
          type: probabilistic,
          probabilistic: { sampling_percentage: 25 },
          type: resp_code_c,
          status_code: { status_codes: [200] },
          log_file_path: '/var/log/squid/access_json.log',
        },
      ]
{% endif %}
  resourcedetection/system:
    detectors: ["system"]
    system:
      hostname_sources: ["os"]
  memory_limiter:
    check_interval: 1s
    limit_percentage: 75
    spike_limit_percentage: 15
  # https://github.com/open-telemetry/opentelemetry-collector/tree/main/processor/batchprocessor
  batch:
    send_batch_size: 10000
    timeout: 10s
{% if otelcol_config_processors %}
  {{ otelcol_config_processors | to_nice_yaml(indent=2,sort_keys=False) | indent(2, False) }}
{% endif %}

extensions:
  zpages: {}

# https://openobserve.ai/docs/ingestion/logs/otlp/
exporters:
{% if otelcol_debug_enable | bool %}
  # https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/debugexporter/README.md
  debug:
    verbosity: detailed
    sampling_initial: 5
    sampling_thereafter: 200
{% endif %}
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/exporter/fileexporter/README.md
  file/debug:
    # if systemd PrivateTmp, check /tmp/systemd-private-*-otel-collector.service-*/tmp/otel-debug.log
    path: /tmp/otel-debug.log
    rotation:
      max_megabytes: 10
      max_days: 3
      max_backups: 3
      localtime: false
    format: json
    # compression: zstd
{% if otelcol_server_url is defined and otelcol_server_url != None %}
  otlphttp/openobserve_default:
    endpoint: {{ otelcol_server_url }}
{%     if otelcol_auth_key is defined and otelcol_auth_key != None and otelcol_auth_key | length > 0 %}
    headers:
      Authorization: "Basic {{ otelcol_auth_key }}"
{%     endif %}
  otlphttp/openobserve_journald:
    endpoint: {{ otelcol_server_url }}
    headers:
{%     if otelcol_auth_key is defined and otelcol_auth_key != None and otelcol_auth_key | length > 0 %}
      Authorization: "Basic {{ otelcol_auth_key }}"
{%     endif %}
      stream-name: journald
{% endif %}
{% if otelcol_config_exporters %}
  {{ otelcol_config_exporters | to_nice_yaml(indent=2,sort_keys=False) | indent(2, False) }}
{% endif %}

service:
  extensions: [zpages]
  pipelines:
    metrics:
      receivers: [hostmetrics]
      processors: [resourcedetection/system, memory_limiter, batch]
      exporters:
{% if otelcol_server_url is defined and otelcol_server_url != None %}
        - otlphttp/openobserve_default
{% else %}
        - file/debug
{% endif %}
    logs:
      receivers: [filelog/std]
      processors: [resourcedetection/system, memory_limiter, batch]
      exporters:
{% if otelcol_server_url is defined and otelcol_server_url != None %}
        - otlphttp/openobserve_default
{% else %}
        - file/debug
{% endif %}
    logs/journald:
      receivers: [journald]
      processors: [resourcedetection/system, memory_limiter, batch]
      exporters:
{% if otelcol_server_url is defined and otelcol_server_url != None %}
        - otlphttp/openobserve_journald
{% else %}
        - file/debug
{% endif %}
{% if otelcol_config_service_pipelines %}
    {{ otelcol_config_service_pipelines | to_nice_yaml(indent=2,sort_keys=False) | indent(4, False) }}
{% endif %}
