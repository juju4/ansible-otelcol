---

- name: Converge
  hosts: all
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
    no_proxy: "{{ lookup('env', 'no_proxy') }}"
  remote_user: root
  vars:
    otelcol_user_groups:
      # no systemd in container
      # - systemd-journal
      - "{{ otelcol_user }}"

    # split logs
    otelcol_filelog_include:
      - /var/log/auth.log
      - /var/log/apt/history.log

    # https://opentelemetry.io/docs/collector/configuration/
    otelcol_journald_extras:
      units:
        - ssh.service
        - sudo.service
        - su
        - systemd-journald.service
        - rsyslog.service
        - otel-collector.service
        - openntpd.service
        - cron.service
    otelcol_config_receivers:
      # possible duplicate of iptables logs?
      journald/kernel:
        directory: /var/log/journal
        dmesg: true
      filelog/mail:
        include:
          - /var/log/mail.log
          - /var/log/mail.err
        include_file_path: true
      filelog/firewall:
        include:
          - /var/log/iptables/iptables.log
          - /var/log/iptables/ip6tables.log
    otelcol_config_exporters:
      file/debugkernel:
        path: /tmp/otel-kernel-debug.log
        rotation:
          max_megabytes: 10
          max_days: 3
          max_backups: 3
          localtime: false
        format: json
      file/debugmail:
        path: /tmp/otel-mail-debug.log
        rotation:
          max_megabytes: 10
          max_days: 3
          max_backups: 3
          localtime: false
        format: json
      file/debugfw:
        path: /tmp/otel-fw-debug.log
        rotation:
          max_megabytes: 10
          max_days: 3
          max_backups: 3
          localtime: false
        format: json

    otelcol_config_service_pipelines:
      logs/kernel:
        receivers: [journald/kernel]
        processors: [resourcedetection/system, memory_limiter, batch]
        exporters: [file/debugkernel]
      logs/mail:
        receivers: [filelog/mail]
        processors: [resourcedetection/system, memory_limiter, batch]
        exporters: [file/debugmail]
      logs/firewall:
        receivers: [filelog/firewall]
        processors: [resourcedetection/system, memory_limiter, batch]
        exporters: [file/debugfw]
  pre_tasks:
    - name: Ubuntu | Install python3
      ansible.builtin.raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3-minimal)
      register: python3
      changed_when: "'installed' in python3.stdout"
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16)
    - name: RedHat | Install python3
      ansible.builtin.raw: test -e /usr/bin/python3 || (yum install -y python3)
      register: python3
      changed_when: "'installed' in python3.stdout"
      when: (ansible_os_family == "RedHat" and ansible_distribution_major_version | int >= 8)
    - name: Gather Facts
      ansible.builtin.setup:
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16)
    - name: Ubuntu Bionic+, Redhat 8+ | Enforce python3 for ansible
      ansible.builtin.set_fact:
        ansible_python_interpreter: /usr/bin/python3
      when: >
        (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 16) or
        (ansible_os_family == "RedHat" and ansible_distribution_major_version | int >= 8)
    - name: Debian | Refresh apt cache
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600
      when: ansible_os_family == "Debian"
    - name: Debug | var ansible_virtualization_type
      ansible.builtin.debug:
        var: ansible_virtualization_type
  roles:
    - juju4.otelcol
