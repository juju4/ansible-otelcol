---

- name: Verify
  hosts: "{{ playbook_hosts | default('all') }}"
  vars:
    binary_otelcol: /usr/local/bin/otelcol-contrib
    config_otelcol: /etc/otel-config.yaml
    user_otelcol: _otel
    ports:
      # otelcol
      - { h: localhost, p: 8888 }
      - { h: localhost, p: 55679 }
    is_container: false
  pre_tasks:
    - name: Debug | var ansible_virtualization_type
      ansible.builtin.debug:
        var: ansible_virtualization_type
    - name: Set fact is_container
      ansible.builtin.set_fact:
        is_container: true
      when: >
        (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "docker" or ansible_virtualization_type == "containerd"
           or ansible_virtualization_type == "container"
          )
        )
    - name: Wait a bit to get logs
      ansible.builtin.pause:
        seconds: 60
  tasks:
    - name: Check otelcol binary
      ansible.builtin.stat:
        path: "{{ binary_otelcol }}"
      register: bin

    - name: Ensure otelcol running
      ansible.builtin.command:
        cmd: "pgrep -u {{ user_otelcol }} otelcol-contrib"
      register: ps1
      changed_when: false
      failed_when: false
    - name: Validate ps output
      ansible.builtin.assert:
        that: ps1.stdout
      when:
        - not is_container|bool

    - name: Ensure procps package is present
      ansible.builtin.package:
        name: procps
        state: present
      when: ansible_os_family == "RedHat"
    - name: Debian | Ensure ps/pgrep is present
      ansible.builtin.package:
        name: procps
        state: present
      when: ansible_os_family == "Debian"
    - name: Check all processes
      ansible.builtin.command: ps aux
      changed_when: false
      register: psa
    - name: Debug | ps aux output
      ansible.builtin.debug:
        var: psa
        verbosity: 1

    - name: Ensure ports are listening
      ansible.builtin.wait_for:
        host: "{{ item.h }}"
        port: "{{ item.p }}"
        timeout: 10
      with_items: "{{ ports }}"
      when:
        - not is_container|bool

    - name: Get journalctl errors by priority
      ansible.builtin.command:
        cmd: journalctl -u otel-collector -l --no-pager -p err
      changed_when: false
      failed_when: false
      register: errors
    - name: Validate no errors (prio)
      ansible.builtin.assert:
        that:
          - "'ERROR' not in errors.stdout"
      when:
        - not is_container|bool

    - name: Get journalctl errors by grep
      ansible.builtin.command:
        cmd: journalctl -u otel-collector -l --no-pager -g error
      changed_when: false
      failed_when: false
      register: errors
    - name: Validate no errors (grep)
      ansible.builtin.assert:
        that:
          - "'ERROR' not in errors.stdout"
          - "'Unauthenticated' not in errors.stdout"
          - "'Permission denied' not in errors.stdout"
      when:
        - not is_container|bool

    - name: Check otel debug files - ls
      ansible.builtin.shell:
        cmd: find /tmp/systemd-private-* -type f -iname 'otel*-debug.log' -ls
      changed_when: false
      failed_when: false
    - name: Check otel debug files - cat
      ansible.builtin.shell:
        cmd: find /tmp/systemd-private-* -type f -iname 'otel*-debug.log' -exec cat {} \;
      changed_when: false
      failed_when: false
